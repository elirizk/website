---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
export const prerender = true;
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
		font-size: 1em;;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
		border-bottom: 4px solid transparent;
	}
	a::before {
		content: '';
		position: absolute;
		transition: transform .3s ease;
		border-bottom: 4px var(--gray-lighter) solid;
		left: 0;
		bottom: 0;
		width: 100%;
		height: 10px;
		background: var(--text-secondary);
		transform: scaleX(0);
		margin-bottom: -0.19em;
  	}
	a:hover:not(.active) {
		transform: scaleX(1);
		font-weight: bold;
	}
	a:hover::before {
		margin-bottom: -0.19em;
		transform: scaleX(1);
	}
	@media (max-width: 780px) {
		a:hover::before {
			margin-bottom: -0.27em;
		}
	}

</style>
